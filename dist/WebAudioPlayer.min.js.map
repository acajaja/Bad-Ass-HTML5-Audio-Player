{"version":3,"file":"WebAudioPlayer.min.js","mappings":"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","sources":["webpack://bad-ass-html5-audio-player/webpack/bootstrap","webpack://bad-ass-html5-audio-player/webpack/runtime/define property getters","webpack://bad-ass-html5-audio-player/webpack/runtime/hasOwnProperty shorthand","webpack://bad-ass-html5-audio-player/./src/WebAudioPlayer/components/HttpClient.js","webpack://bad-ass-html5-audio-player/./src/WebAudioPlayer/components/logger.js","webpack://bad-ass-html5-audio-player/./src/WebAudioPlayer/WebAudioPlayer.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/* istanbul ignore file */\nexport const get = async (endpoint, queryParams = null) => {\n    let URL = endpoint;\n\n    if (queryParams) {\n        const qp = new URLSearchParams(queryParams);\n        URL = `${URL}?${qp.toString}`;\n    }\n\n    const requestParams = {\n        headers: new Headers({\n            'Content-Type': 'application/json',\n            'X-Requested-With': ''\n        }),\n        method: 'GET',\n        mode: 'same-origin'\n    };\n\n    const response = await fetch(URL, requestParams);\n\n    if (!response.ok) {\n        throw new Error('Bad');\n    }\n\n    return await response.json();\n}\n","/* istanbul ignore file */\nconst _log = (level, msg) => {\n    console.log(msg);\n}\n\nexport const debug = (msg) => {\n    _log(1, msg);\n}\nexport const log = (msg) => {\n    _log(2, msg);\n}\nexport const error = (msg) => {\n    _log(3, msg);\n}\nexport const info = (msg) => {\n    _log(4, msg);\n}\nexport const warn = (msg) => {\n    _log(5, msg);\n}\nexport const critical = (msg) => {\n    _log(6, msg);\n}\n","import * as HttpClient from './components/HttpClient.js';\nimport * as logger from './components/logger.js';\n/**\n * Web Audio JavaScript Audio Player v0.7.\n *\n * Designed to play any supported audio type.\n *\n * @copyright © 2013,2017,2022 Clif Jackson\n * @package Web Audio JavaScript Audio Player\n * @version 0.7\n */\nexport const version\t\t= '0.7';\n \nlet _DOC;\nlet _AUDIO_CODECS_MIMES     = {\n\tmp3: ['audio/mpeg', 'audio/MPA', 'audio/mpa-robust','audio/mpeg3','audio/x-mpeg-3'],\n\tmp4: ['audio/aac', 'audio/aacp', 'audio/3gpp', 'audio/3gpp2', 'audio/mp4', 'audio/MP4A-LATM', 'audio/mpeg4-generic'],\n\togg: ['application/ogg', 'audio/oga', 'audio/ogg', 'audio/vorbis', 'audio/vorbis-config'],\n\twebm: ['audio/webm'],\n\twav: ['audio/vnd.wave', 'audio/wav', 'audio/wave', 'audio/x-wav']\n};\nlet _WEB_AUDIO \t\t\t\t= null;\nlet _AUTO_PLAY\t\t\t\t= false;\nlet _CURRENT_TRACK      \t= null;\nlet _HTML5_SUPPORT\t\t\t= false;\nlet _PLAYERROOT\t\t\t\t= null;\nlet _PLAYER_CONTROL_NODES\t= [];\nlet _PLAYLIST               = null;\nlet _PLAYLISTS              = [];\nlet _TRACK_COUNT\t\t\t= 0;\nlet _SAVEDVOLUME\t\t\t= 0;\nlet _PLAYER_PARTS_SELECTORS = {\n\tajaxSpinner: '.net-stat-box',\n\tautoplayBtn: '.autoplay-btn',\n\tcurrentTimeDisplay: '.current-time',\n\tinfoButton: '.info-button',\n\tinfoScreen: '.info-screen',\n\tinfoScroll: '.info-scroll-box',\n\tinfoScrollContent: '.info-content-box',\n\tloadProgress: '.loading-bar',\n\tmuteButton: '.mute-button',\n\tnextTrackBtn: '.next-track-btn',\n\tplayBtn: '.play-btn',\n\tplaylistBox: '.playlist-scroll-box',\n\tplaylistBtn: '.playlist-btn',\n\tprevTrackBtn: '.prev-track-btn',\n\tremainingTime: '.remaining-time',\n\tseekHandleBox: '.seek-handle-box',\n\tscreenTitle: '.screen-title',\n\tuserScreen: '.user-screen',\n\tvolumeSliderMute: '.volume-slider-mute-box',\n\tvolumeButton: '.volume-button',\n\tvolumeSlider: '.volume-slider'\n}\nlet _PLAYER_FUNCS\t\t\t= {\n    ajaxSpinner: {},\n    autoplayBtn: {},\n    currentTimeDisplay: null,\n    infoButton: {},\n    infoScreen: {},\n    infoScroll: null,\n    infoScrollContent: null,\n    loadProgress: {},\n    muteButton: {},\n    nextTrackBtn: {},\n    playBtn: {},\n    playlistBox: null,\n    playlistBtn: {},\n    prevTrackBtn: {},\n    remainingTime: null,\n    seekHandleBox: {},\n    screenTitle: null,\n    userScreen: {},\n    volumeButton: {},\n    volumeSliderMute: {},\n    volumeSlider: {}\n}\n\n/**\n * Public Methods\n ---------------------------------------------------------------------*/\n\n /**\n  * Startup an instance of a player by passing in an id. This\n  * is meant to be used in production environments.\n  *\n  * @param {String} id DOM node id attribute for your player.\n  * @returns {HTMLWebAudioElement}\n  */\n/* istanbul ignore next */\nexport const startup = (id) => {\n\tconst cb = (e) => {\n\t\tconst playerNode = window.document.getElementById(id);\n\t\tinit(playerNode, window.document);\n\t}\n\twindow.document.addEventListener('DOMContentLoaded', cb);\n}\n\n/**\n * Initialize the player.\n *\n * @return {HTMLWebAudioElement}\n */\n export const init = (playerNode, doc, audio = null) => {\n\t_PLAYERROOT\t   = playerNode;\n\t_DOC\t\t   = doc;\n\t_HTML5_SUPPORT = _checkWebAudioApiSupport();\n\n\ttry {\n\t\tif (!_HTML5_SUPPORT) {\n\t\t\tthrow new Error('Web Audio is not supported on your device :(');\n\t\t}\n\n\t\t_PLAYERROOT.classList.add('paused');\n\t\t_setAudioObject(audio);\n\n        if (!_checkMimeSupport()) {\n            throw new Error('There is no audio codec supported for this device.');\n        }\n\n\t\t_setUpFunctionality();\n\t\t_PLAYER_CONTROL_NODES = [\n\t\t\t_PLAYER_FUNCS.autoplayBtn.node,\n\t\t\t_PLAYER_FUNCS.playBtn.node,\n\t\t\t_PLAYER_FUNCS.prevTrackBtn.node,\n\t\t\t_PLAYER_FUNCS.muteButton.node,\n\t\t\t_PLAYER_FUNCS.nextTrackBtn.node,\n\t\t\t_PLAYER_FUNCS.seekHandleBox.node,\n\t\t\t_PLAYER_FUNCS.volumeSlider.node\n\t\t];\n\t\t_togglePlayerButtons(true);\n\n        // Initialize volume\n\t\t_PLAYER_FUNCS.volumeSlider.setPosition(1);\n\t\t// Initialize audio seek position\n        _PLAYER_FUNCS.seekHandleBox.setPosition(0);\n\t\t// Disable the info button until something is loaded\n\t\t_PLAYER_FUNCS.infoButton.disable(true);\n\n\t\t_connectPlayerButtons();\n\t\t_connectAudioEvents();\n\t\t_renderPlaylistsList();\n\n\t\treturn _WEB_AUDIO;\n\t}\n\tcatch (err) {\n\t\tlogger.error(err);\n\t\tlogger.error('Failed to initiate the Web Audio Player :(');\n\t}\n}\n\n/**\n * Private Methods\n ---------------------------------------------------------------------*/\n\n/**\n * Convenience function.\n *\n * @param {String} className\n * @returns {object} DOMNode|null\n */\nfunction _getNodeByClass(className) {\n    return _DOC.querySelector(`#${_PLAYERROOT.id} ${className}`);\n}\n\n/**\n * \n * @param {Boolean} state \n */\nfunction _ajaxSpinnerToggler(state) {\n\tif (state) {\n\t\t_PLAYER_FUNCS.ajaxSpinner.node.classList.add('play');\n\t}\n\telse {\n\t\t_PLAYER_FUNCS.ajaxSpinner.node.classList.remove('play');\n\t}\n}\n\n/**\n * \n * @param {DOM Event} e \n */\nfunction _autoPlayButtonHandler(e) {\n\tif (!_AUTO_PLAY) {\n\t\t_AUTO_PLAY = true;\n\t\t_PLAYERROOT.classList.add('autoplay');\n\t}\n\telse {\n\t\t_AUTO_PLAY = false;\n\t\t_PLAYERROOT.classList.remove('autoplay');\n\t}\n}\n\n/**\n * \n * @param {Boolean} state \n */\nfunction _infoButtonHandler(state) {\n\tif (state) {\n\t\t_PLAYER_FUNCS.infoButton.node.classList.remove('has-info');\n\t\t_PLAYER_FUNCS.infoButton.node.disabled = true;\n\t}\n\telse {\n\t\t_PLAYER_FUNCS.infoButton.node.classList.add('has-info');\n\t\t_PLAYER_FUNCS.infoButton.node.disabled = false;\n\t}\n}\n\n/**\n * \n * @param {Boolean} fast \n */\nfunction _infoScreenCloseHandler(fast) {\n\tif (fast) {\n\t\t_PLAYER_FUNCS.infoScreen.node.classList.add('fast');\n\t\t// setTimeout(function() {\n\t\t\t_PLAYER_FUNCS.infoScreen.node.classList.remove('fast');\n\t\t// }, 500);\n\t}\n\t_PLAYER_FUNCS.infoScreen.node.classList.remove('play');\n}\n\n/**\n * \n */\nfunction _infoScreenOpenHandler() {\n\t_PLAYER_FUNCS.infoScreen.node.classList.add('play');\n}\n\n/**\n * \n * @param {DOM Event} e \n */\nfunction _infoScreenToggler(e) {\n\tif (_PLAYER_FUNCS.infoScreen.node.classList.contains('play')) {\n\t\t_PLAYER_FUNCS.infoScreen.close();\n\t\t// classList.remove('active');\n\t}\n\telse {\n\t\t_PLAYER_FUNCS.infoScreen.open();\n\t\t// classList.add('active');\n\t}\n}\n\n/**\n * Define all the functionality the player UI needs.\n */\nfunction _setUpFunctionality() {\n\t_PLAYER_FUNCS.ajaxSpinner = {\n\t\tnode: _getNodeByClass(_PLAYER_PARTS_SELECTORS.ajaxSpinner),\n\t\ttoggle: _ajaxSpinnerToggler\n\t}\n\t_PLAYER_FUNCS.autoplayBtn = {\n\t\tnode: _getNodeByClass(_PLAYER_PARTS_SELECTORS.autoplayBtn),\n\t\thandleButton: _autoPlayButtonHandler\n\t}\n\t_PLAYER_FUNCS.currentTimeDisplay = _getNodeByClass(_PLAYER_PARTS_SELECTORS.currentTimeDisplay);\n\t_PLAYER_FUNCS.infoButton = {\n\t\tnode: _getNodeByClass(_PLAYER_PARTS_SELECTORS.infoButton),\n\t\tdisable: _infoButtonHandler\n\t}\n\t_PLAYER_FUNCS.infoScreen = {\n\t\tnode: _getNodeByClass(_PLAYER_PARTS_SELECTORS.infoScreen),\n\t\tclose: _infoScreenCloseHandler,\n\t\topen: _infoScreenOpenHandler,\n\t\ttoggle: _infoScreenToggler\n\t}\n\t_PLAYER_FUNCS.infoScroll = _getNodeByClass(_PLAYER_PARTS_SELECTORS.infoScroll);\n\t_PLAYER_FUNCS.infoScrollContent = _getNodeByClass(_PLAYER_PARTS_SELECTORS.infoScrollContent);\n\t_PLAYER_FUNCS.loadProgress = {\n\t\tnode: _getNodeByClass(_PLAYER_PARTS_SELECTORS.loadProgress),\n\t\treset: function() {\n\t\t\tthis.setWidth('0');\n\t\t},\n\t\tsetFullWidth: function(e) {\n\t\t\tthis.setWidth('100%');\n\t\t},\n\t\tsetWidth: function(w) {\n\t\t\t_PLAYER_FUNCS.loadProgress.node.style.width = w;\n\t\t}\n\t}\n\t_PLAYER_FUNCS.muteButton = {\n\t\tnode: _getNodeByClass(_PLAYER_PARTS_SELECTORS.muteButton)\n\t}\n\t_PLAYER_FUNCS.nextTrackBtn = {\n\t\tnode: _getNodeByClass(_PLAYER_PARTS_SELECTORS.nextTrackBtn),\n\t\thandleButton: function(e) {\n\t\t\t_removePlayingClassFromAll();\n\t\t\t_loadTrack(_getNextTrack());\n\t\t}\n\t}\n\t_PLAYER_FUNCS.playBtn = {\n\t\tnode: _getNodeByClass(_PLAYER_PARTS_SELECTORS.playBtn),\n\t\thandleButton: async function(e) {\n\t\t\t// For the very first play after page load\n\t\t\tif (_WEB_AUDIO.paused && _CURRENT_TRACK == null) {\n\t\t\t\t_CURRENT_TRACK = 0;\n\t\t\t\t_loadTrack(_CURRENT_TRACK);\n\t\t\t}\n\t\t\telse if (_WEB_AUDIO.paused) {\n\t\t\t\tawait _play(e);                    \n\t\t\t}\n\t\t\telse {\n\t\t\t\t_pause(e);\n\t\t\t}\n\t\t}\n\t}\n\t_PLAYER_FUNCS.playlistBox = _getNodeByClass(_PLAYER_PARTS_SELECTORS.playlistBox);\n\t_PLAYER_FUNCS.playlistBtn = {\n\t\tnode: _getNodeByClass(_PLAYER_PARTS_SELECTORS.playlistBtn),\n\t\thandleButton: _loadAllPlaylistsHandler\n\t}\n\t_PLAYER_FUNCS.prevTrackBtn = {\n\t\tnode: _getNodeByClass(_PLAYER_PARTS_SELECTORS.prevTrackBtn),\n\t\thandleSingleClick: function(e) {\n\t\t\t_WEB_AUDIO.currentTime = 0;\n\t\t},\n\t\thandleDblClick: function(e) {\n\t\t\t_removePlayingClassFromAll();\n\t\t\t_loadTrack(_getPrevTrack());\n\t\t}\n\t}\n\t_PLAYER_FUNCS.remainingTime = _getNodeByClass(_PLAYER_PARTS_SELECTORS.remainingTime);\n\t_PLAYER_FUNCS.seekHandleBox = {\n\t\tnode: _getNodeByClass(_PLAYER_PARTS_SELECTORS.seekHandleBox),\n\t\thandleInput: function(e) {\n\t\t\t_WEB_AUDIO.currentTime = e.target.value;\n\t\t},\n\t\treset: function() {\n\t\t\tthis.node.value = 0;\n\t\t\tthis.toggleEnable(true);\n\t\t},\n\t\tsetMax: function() {\n\t\t\tthis.node.setAttribute('max', _WEB_AUDIO.seekable.end(0));\n\t\t},\n\t\tsetPosition: function(val) {\n\t\t\tthis.node.value = val;\n\t\t},\n\t\ttoggleEnable: function(status) {\n\t\t\tthis.node.disabled = status;\n\t\t}\n\t}\n\t_PLAYER_FUNCS.screenTitle = _getNodeByClass(_PLAYER_PARTS_SELECTORS.screenTitle);\n\t_PLAYER_FUNCS.userScreen = {\n\t\tnode: _getNodeByClass(_PLAYER_PARTS_SELECTORS.userScreen),\n\t\treset: function() {\n\t\t\t_PLAYER_FUNCS.seekHandleBox.reset();\n\t\t\t_PLAYER_FUNCS.infoScreen.close(true);\n\t\t\t_PLAYER_FUNCS.loadProgress.reset();\n\t\t\t_populateTimeDisplay('00:00', '00:00');\n\t\t}\n\t}\n\t_PLAYER_FUNCS.volumeButton = {\n\t\tnode: _getNodeByClass(_PLAYER_PARTS_SELECTORS.volumeButton),\n\t\ttoggleActive: function() {\n\t\t\t_PLAYER_FUNCS.volumeButton.node.classList.toggle('active');\n\t\t},\n\t\ttoggleMute: function(e) {\n\t\t\t// Unmute\n\t\t\tif (_WEB_AUDIO.muted) {\n\t\t\t\t_WEB_AUDIO.muted = false;\n\t\t\t\t_PLAYER_FUNCS.volumeSlider.setPosition(_SAVEDVOLUME);\n\t\t\t\t_PLAYERROOT.classList.remove('muted');\n\t\t\t}\n\t\t\t// Mute\n\t\t\telse {\n\t\t\t\t_SAVEDVOLUME = _WEB_AUDIO.volume;\n\t\t\t\t_WEB_AUDIO.muted = true;\n\t\t\t\t_PLAYER_FUNCS.volumeSlider.setPosition(0);\n\t\t\t\t_PLAYERROOT.classList.add('muted');\n\t\t\t}\n\t\t}\n\t}\n\t_PLAYER_FUNCS.volumeSliderMute = {\n\t\tnode: _getNodeByClass(_PLAYER_PARTS_SELECTORS.volumeSliderMute),\n\t\tclose: function() {\n\t\t\t_PLAYER_FUNCS.volumeButton.toggleActive();\n\t\t\t_PLAYER_FUNCS.volumeSliderMute.node.classList.remove('play');\n\t\t},\n\t\topen: function() {\n\t\t\t_PLAYER_FUNCS.volumeButton.toggleActive();\n\t\t\t_PLAYER_FUNCS.volumeSliderMute.node.classList.add('play');\n\t\t},\n\t\ttoggle: function(e) {\n\t\t\tif (_PLAYER_FUNCS.volumeSliderMute.node.classList.contains('play')) {\n\t\t\t\t_PLAYER_FUNCS.volumeSliderMute.close();\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_PLAYER_FUNCS.volumeSliderMute.open();\n\t\t\t}\n\t\t}\n\t}\n\t/* istanbul ignore next */\n\t_PLAYER_FUNCS.volumeSlider = {\n\t\tnode: _getNodeByClass(_PLAYER_PARTS_SELECTORS.volumeSlider),\n\t\thandleInput: function(e) {\n\t\t\t_WEB_AUDIO.volume = e.target.value;\n\t\t},\n\t\tsetPosition: function(v) {\n\t\t\tconst vol = parseInt(v);\n\t\t\t_PLAYER_FUNCS.volumeSlider.node.value = vol > 1 ? 1 : vol;\n\t\t}\n\t}\n}\n\n/**\n * Handle clicks on the playlists button.\n *\n * @param {DOM Event} e \n */\n/* istanbul ignore next */\nfunction _loadAllPlaylistsHandler(e) {\n\t_togglePlayerButtons(true);\n\n\tif (!_WEB_AUDIO.paused) {\n\t\t_pause();\n\t}\n\n\t// Reset doesn't work unless we wait.\n\t// await setTimeout(function() {\n\t\t_PLAYER_FUNCS.volumeSliderMute.close();\n\t\t_PLAYER_FUNCS.userScreen.reset();\n\t\t_PLAYER_FUNCS.infoButton.disable(true);\n\t\t_renderPlaylistsList();\n\t// }, 100);\n}\n\n/**\n * Comvenience method for attaching event handlers to DOM node.\n *\n * @param {DOM Node} node DOM Node to attach event to.\n * @param {String} event DOM event to attach to.\n * @param {Function} handler Callback function.\n * @returns {Void}\n */\nfunction _attachEvents(node, event, handler) {\n\tif (typeof node.addEventListener != 'function') {\n\t\tthrow new Error('Cannot attach events. Client does not support addEventListener method.');\n\t}\n\tnode.addEventListener(event, handler, false);\n}\n\n/**\n * Determine if the browser can play the given mime type.\n *\n * @param {String} type \n * @returns \n */\n/* istanbul ignore next */\nfunction _canPlayType(type) {\n\treturn _WEB_AUDIO.canPlayType(type);\n}\n\n/**\n * Check if the browser supprts the Web Audio element.\n *\n * @returns {Boolean} true if supported, false otherwise.\n */\nfunction _checkWebAudioApiSupport() {\n\tconst type = typeof Audio;\n\treturn (type == 'function' || type == 'object');\n}\n\n/**\n * Connect player buttons\n *\n * @returns {Void}\n */\n function _connectPlayerButtons() {\n\t_attachEvents(_PLAYER_FUNCS.autoplayBtn.node, 'click', _PLAYER_FUNCS.autoplayBtn.handleButton);\n\t_attachEvents(_PLAYER_FUNCS.infoButton.node, 'click', _PLAYER_FUNCS.infoScreen.toggle);\n\t_attachEvents(_PLAYER_FUNCS.nextTrackBtn.node, 'click', _PLAYER_FUNCS.nextTrackBtn.handleButton);\n\t_attachEvents(_PLAYER_FUNCS.playBtn.node, 'click', _PLAYER_FUNCS.playBtn.handleButton);\n\t_attachEvents(_PLAYER_FUNCS.playlistBtn.node, 'click', _PLAYER_FUNCS.playlistBtn.handleButton);\n\t_attachEvents(_PLAYER_FUNCS.prevTrackBtn.node, 'click', _PLAYER_FUNCS.prevTrackBtn.handleSingleClick);\n\t_attachEvents(_PLAYER_FUNCS.prevTrackBtn.node, 'dblclick', _PLAYER_FUNCS.prevTrackBtn.handleDblClick);\n\t_attachEvents(_PLAYER_FUNCS.seekHandleBox.node, 'input', _PLAYER_FUNCS.seekHandleBox.handleInput);\n\t_attachEvents(_PLAYER_FUNCS.muteButton.node, 'click', _PLAYER_FUNCS.volumeButton.toggleMute);\n    _attachEvents(_PLAYER_FUNCS.volumeButton.node, 'click', _PLAYER_FUNCS.volumeSliderMute.toggle);\n\t_attachEvents(_PLAYER_FUNCS.volumeSlider.node, 'input', _PLAYER_FUNCS.volumeSlider.handleInput);\n}\n\n/**\n * Determine the supported mime type.\n * \n * @param {Array} types List of mime types\n * @returns {Boolean|String} If not false, returns the audio mime.\n */\n/* istanbul ignore next */\nfunction _checkMimeSupport() {\n\tvar ans = '';\n\n\tfor (let x in _AUDIO_CODECS_MIMES) {\n        for (let xx in _AUDIO_CODECS_MIMES[x]) {\n            ans = _canPlayType(_AUDIO_CODECS_MIMES[x][xx]);\n\n            if (ans === 'probably' || ans === 'maybe') {\n                return x;\n            }\n        }\n\t}\n\n\treturn false;\n}\n\n/**\n * Connect to the HTML5 media events\n *\n * @return {Void}\n */\nfunction _connectAudioEvents() {\n\t_attachEvents(_WEB_AUDIO, 'canplay', _play);\n\t_attachEvents(_WEB_AUDIO, 'ended', _handleEndOfAudioEvent);\n\t_attachEvents(_WEB_AUDIO, 'loadeddata', _PLAYER_FUNCS.loadProgress.setFullWidth);\n\t_attachEvents(_WEB_AUDIO, 'pause', _handlePauseEvent);\n\t_attachEvents(_WEB_AUDIO, 'playing', _handlePlayingEvent);\n\t_attachEvents(_WEB_AUDIO, 'progress', _handleProgressEvent);\n\t_attachEvents(_WEB_AUDIO, 'timeupdate', _handleTimeUpdateEvent);\n}\n\n/**\n * Convert seconds to mins:secs format\n *\n * @param {Number} s Current play time in seconds\n * @param {Boolean} rev Reverse the time\n * @returns {String}\n */\nfunction _convertSecondsToTime(s, rev) {\n\tif (rev === true) {\n\t\tvar mins = Math.floor(s / 60, 10),\n\t\tsecs = s - mins * 60,\n\t\ttime = (mins > 9 ? mins : '0' + mins) + ':' + (secs > 9 ? secs : '0' + secs);\n\n\t\treturn time;\n\t}\n\n\tvar sec_num = parseInt(s, 10),\n\thours   = Math.floor(sec_num / 3600),\n\tminutes = Math.floor((sec_num - (hours * 3600)) / 60),\n\tseconds = sec_num - (hours * 3600) - (minutes * 60),\n\ttime = (minutes < 10 ? '0' + minutes : minutes) + ':' + (seconds < 10 ? '0' + seconds : seconds);\n\n\treturn time;\n}\n\n/**\n * \n * @param {String} str\n * @returns {Text}\n */\nfunction _createTextNode(str) {\n\treturn _DOC.createTextNode(str);\n}\n\n/**\n * \n * @param {type} node\n * @returns {Void}\n */\nfunction _empty(node) {\n\twhile (node.firstChild) {\n\t\tnode.removeChild(node.firstChild);\n\t}\n\n\treturn node;\n}\n\n/**\n * The next track or the first track\n *\n * @return {Number} New track number\n */\nfunction _getNextTrack() {\n\tvar hypoNext = _CURRENT_TRACK + 1;\n\n\tif (hypoNext < _TRACK_COUNT) {\n        return hypoNext;\n    }\n\n\treturn 0;\n}\n\n/**\n * The previous track or the last track\n *\n * @return {Number} New track number\n */\nfunction _getPrevTrack() {\n\tif (_CURRENT_TRACK > 0) {\n        return (_CURRENT_TRACK - 1);\n    }\n\n\treturn (_TRACK_COUNT - 1);\n}\n\n/**\n * Load the playlist with an optional playlist path\n *\n * @param {String} pl Path to load playlist from via AJAX\n * @return {JSON}\n */\n async function _loadPlaylist(pl) {\n\tif (typeof pl != 'string' || pl.length <= 0) {\n\t\tthrow new Error('No playlist has been defined!');\n\t}\n\n\t_PLAYER_FUNCS.ajaxSpinner.toggle(true);\n\t_togglePlayerButtons(true);\n\t_PLAYER_FUNCS.playlistBtn.node.classList.remove('active');\n\n\treturn await HttpClient.get(pl);\n}\n\n/**\n * Handle clicks on a single playlist.\n *\n * @param {DOM Event} e\n * @returns {Promise}\n */\nasync function _playlistButtonHandler(e) {\n\tconst plu = e.target.dataset.playlist;\n\te.preventDefault();\n\n\ttry {\n\t\tconst playlistUrl = new URL(plu);\n\t\tconst pl = await _loadPlaylist(playlistUrl.href);\n\t\t_handlePlaylist(pl);\n\t}\n\tcatch (ex) {\n\t\tconsole.error('Failed to load playlist');\n\t}\n}\n\n/**\n * Handle a playlist after it loads.\n *\n * @param {Object} JSON Playlist.\n * @returns {Void}\n */\n function _handlePlaylist(pl) {\n\t// pl = JSON.parse(JSON.stringify(pl));\n\n\t_togglePlayerButtons(false);\n\n\t_PLAYLIST = pl;\n\t_updateScreenTitle(_PLAYLIST.name);\n\t_TRACK_COUNT = _PLAYLIST.tracks.length;\n\t_setUpPlaylistDisplay();\n\t_populateTimeDisplay('00:00', '00:00');\n\n\tconst content = pl.info ? `<p>${pl.info}</p>` : '';\n\t_populateInfoBoxContent(content);\n}\n\n/**\n * Render the playlists defined and imported in\n * 'playlists' named import into _PLAYER_FUNCS.playlistBox.\n *\n * @returns {Void}\n */\nasync function _renderPlaylistsList() {\n\tconst playlistsUrl = new URL(_PLAYERROOT.dataset.playlistsUrl);\n\n\tif (_PLAYLISTS.length === 0) {\n\t\t_PLAYLISTS = await HttpClient.get(playlistsUrl.href);\n\t}\n\n    _PLAYER_FUNCS.playlistBtn.node.classList.add('active');\n\t_updateScreenTitle('Playlists');\n\t_empty(_PLAYER_FUNCS.playlistBox);\n\n\tfor (const playlist of _PLAYLISTS) {\n\t\tconst button = _DOC.createElement('button');\n\t\tconst li = _DOC.createElement('li');\n\n\t\tbutton.appendChild(_createTextNode(playlist.name));\n\t\tbutton.dataset.playlist = playlist.url;\n\t\tbutton.setAttribute('title', playlist.name);\n\t\t_attachEvents(button, 'click', _playlistButtonHandler);\n\t\tli.appendChild(button);\n\t\t_PLAYER_FUNCS.playlistBox.appendChild(li);\n\t}\n}\n\n/**\n * Event handler for end.\n *\n * @param {Object} e Event object\n * @returns {Void}\n */\nfunction _handleEndOfAudioEvent(e) {\n\tif (_AUTO_PLAY) {\n\t\t_removePlayingClassFromAll();\n\t\t_loadTrack(_getNextTrack());\n\t}\n}\n\n/**\n * Event handler for pause.\n *\n * @param {Object} e Event object\n * @returns {Void}\n */\nfunction _handlePauseEvent(e) {\n\t_PLAYERROOT.classList.remove('playing');\n\t_PLAYERROOT.classList.add('paused');\n}\n\n/**\n * Event handler for AJAX response.\n *\n * @param {DOM} e Event object\n * @returns {Void}\n */\nfunction _handlePlayingEvent(e) {\n\tvar parent = _PLAYER_FUNCS\n\t\t.playlistBox\n\t\t.querySelector(`button[data-tracknum=\"${_CURRENT_TRACK}\"]`)\n\t\t.parentNode;\n\n\t_PLAYERROOT.classList.remove('paused');\n\t_PLAYERROOT.classList.add('playing');\n\tparent.setAttribute('class', 'current');\n}\n\n/**\n * Event handler for _WEB_AUDIO loading progress.\n *\n * @param {DOM} e Event object\n * @returns {Void}\n */\nfunction _handleProgressEvent(e) {\n\tconst buffd = e.target.buffered;\n\tfor (let i = 0; i < buffd.length; i++) {\n\t\tconst percentage = Math.ceil(parseInt((buffd.end(i) / buffd.duration) * 100));\n\t\t_PLAYER_FUNCS.loadProgress.setWidth(percentage + '%');\n\t}\n}\n\n/**\n * Event handler for _WEB_AUDIO time update.\n *\n * @param {DOM} e Event object\n * @returns {Void}\n */\nfunction _handleTimeUpdateEvent(e) {\n\t// Calculate & set play time display counting backwards\n\tconst dur = e.target.duration;\n\tconst time = e.target.currentTime;\n\tconst totalSecondsRemaining = parseInt(dur - time, 10);\n\n\tif (isNaN(totalSecondsRemaining)) {\n\t\treturn;\n\t}\n\n\t_populateTimeDisplay(_convertSecondsToTime(time), _convertSecondsToTime(totalSecondsRemaining, true));\n\n\t// Set new seek handle position\n\t_PLAYER_FUNCS.seekHandleBox.setPosition(time);\n}\n\nfunction _populateInfoBoxContent(content) {\n\t_empty(_PLAYER_FUNCS.infoScrollContent);\n\n\t_PLAYER_FUNCS.infoScrollContent.innerHTML = content;\n\t_PLAYER_FUNCS.infoButton.disable(false);\n}\n\n/**\n * Load the current track and any info\n *\n * @param {Number} ct The current track number using a 0-based index.\n * @return {Void}\n */\nfunction _loadTrack(ct) {\n\t_pause();\n\t_PLAYER_FUNCS.seekHandleBox.toggleEnable(true);\n\t_PLAYER_FUNCS.loadProgress.reset();\n\t_CURRENT_TRACK = parseInt(ct);\n\t_WEB_AUDIO.src = _PLAYLIST.tracks[_CURRENT_TRACK].path;\n\n\t// Enable track info button if track has info\n\tif (_PLAYLIST.tracks[_CURRENT_TRACK].info.length <= 0) {\n\t\t_PLAYER_FUNCS.infoButton.disable(true);\n\t}\n\telse {\n\t\tconst content = `<p>${_PLAYLIST.tracks[_CURRENT_TRACK].title}</p>\n\t\t\t${_PLAYLIST.tracks[_CURRENT_TRACK].info}`;\n\t\t_populateInfoBoxContent(content);\n\t}\n\n\t_WEB_AUDIO.load();\n}\n\n/**\n * Pause handler\n *\n * @param {Object} e Event object\n * @returns {Void}\n */\nfunction _pause(e) {\n\t_WEB_AUDIO.pause();\n}\n\n/**\n * Play handler for _WEB_AUDIO\n *\n * @param {DOM} e Event object\n * @returns {Void}\n */\nasync function _play(e) {\n\t_PLAYER_FUNCS.seekHandleBox.toggleEnable(false);\n\t_PLAYER_FUNCS.seekHandleBox.setMax();\n\n\ttry {\n\t\tawait _WEB_AUDIO.play();\n\t}\n\tcatch (ex) {\n\t\t_PLAYER_FUNCS.seekHandleBox.toggleEnable(true);\n\t}\n}\n\n/**\n * Set the time displays\n *\n * @param {Number} current\n * @param {Number} remain\n * @returns {Void}\n */\nfunction _populateTimeDisplay(current, remain) {\n\t_empty(_PLAYER_FUNCS.remainingTime)\n\t\t.appendChild(_createTextNode(remain));\n\t_empty(_PLAYER_FUNCS.currentTimeDisplay)\n\t\t.appendChild(_createTextNode(current));\n}\n\n/**\n * Set all tracks in display list to NOT active by removing the class\n *\n * @return {Void}\n */\nfunction _removePlayingClassFromAll() {\n\t_PLAYERROOT.classList.remove('playing');\n\tconst current = _PLAYER_FUNCS.playlistBox.querySelector('current');\n\n\tif (current) {\n\t\tcurrent.removeAttribute('class');\n\t}\n}\n\n/**\n * Create a new Web Audio element if one is not passed in.\n *\n * @param {Audio Element} audio; defaults to null.\n */\nfunction _setAudioObject(audio = null) {\n\t_WEB_AUDIO = audio ?? new Audio();\n}\n\n/**\n * Load track button handler.\n *\n * @param {DOM Event} e \n */\nfunction _handleLoadTrack(e) {\n\tconst trackNum = parseInt(e.target.getAttribute('data-tracknum'));\n\te.preventDefault();\n\t_removePlayingClassFromAll();\n\t_loadTrack(trackNum);\n}\n\n/**\n * Initialize the playlist display and connect to button click event\n *\n * @return {Void}\n */\nfunction _setUpPlaylistDisplay() {\n\t// Clear list contents\n\t_empty(_PLAYER_FUNCS.playlistBox);\n\n\tfor (let x = 0; x < _PLAYLIST.tracks.length; x++) {\n\t\tconst track = _PLAYLIST.tracks[x];\n\t\tconst li = _DOC.createElement('li');\n\t\tconst shortText = _makeShortTitle(track.title);\n\n\t\t// Create a new button node & dress it up.\n\t\tconst btn = _DOC.createElement('button');\n\t\tbtn.appendChild(_createTextNode(shortText));\n\t\tbtn.setAttribute('data-tracknum', x);\n\t\t// Add to list item\n\t\tli.appendChild(btn);\n\t\t// Add to list\n\t\t_PLAYER_FUNCS.playlistBox.appendChild(li);\n\t\t// Add event handler\n\t\t_attachEvents(btn, 'click', _handleLoadTrack);\n\t}\n}\n\n/**\n * Create shortened title\n *\n * @return {String} Shortened title\n */\n/* istanbul ignore next */\nfunction _makeShortTitle(titleStr) {\n\tconst cutoff = 50;\n\n\tif (titleStr.length <= cutoff) {\n\t\treturn titleStr;\n\t}\n\n\tconst cut = titleStr.substr(0, cutoff);\n\tconst split = cut.split(' ');\n\tconst pop = split.pop();\n\n\treturn `${split.join(' ')}...`;\n}\n\n/**\n * Enable/disable all player buttons\n *\n * @param {Boolean} state\n * @returns {Void}\n */\nfunction _togglePlayerButtons(state) {\n\tfor (const node of _PLAYER_CONTROL_NODES) {\n\t\tnode.disabled = state;\n\t}\n}\n\n/**\n * Set the title text\n *\n * @param {String} str New title\n * @returns {Void}\n */\nfunction _updateScreenTitle(str) {\n\t_PLAYER_FUNCS.screenTitle.innerHTML = str;\n}\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","async","endpoint","queryParams","URL","URLSearchParams","toString","requestParams","headers","Headers","method","mode","response","fetch","ok","Error","json","_log","level","msg","console","log","error","version","_DOC","_AUDIO_CODECS_MIMES","mp3","mp4","ogg","webm","wav","_WEB_AUDIO","_AUTO_PLAY","_CURRENT_TRACK","_HTML5_SUPPORT","_PLAYERROOT","_PLAYER_CONTROL_NODES","_PLAYLIST","_PLAYLISTS","_TRACK_COUNT","_SAVEDVOLUME","_PLAYER_PARTS_SELECTORS","_PLAYER_FUNCS","ajaxSpinner","autoplayBtn","currentTimeDisplay","infoButton","infoScreen","infoScroll","infoScrollContent","loadProgress","muteButton","nextTrackBtn","playBtn","playlistBox","playlistBtn","prevTrackBtn","remainingTime","seekHandleBox","screenTitle","userScreen","volumeButton","volumeSliderMute","volumeSlider","startup","id","window","document","addEventListener","e","playerNode","getElementById","init","doc","audio","_checkWebAudioApiSupport","type","Audio","classList","add","_setAudioObject","_checkMimeSupport","ans","x","xx","_canPlayType","_setUpFunctionality","node","_getNodeByClass","toggle","_ajaxSpinnerToggler","handleButton","_autoPlayButtonHandler","disable","_infoButtonHandler","close","_infoScreenCloseHandler","open","_infoScreenOpenHandler","_infoScreenToggler","reset","this","setWidth","setFullWidth","w","style","width","_removePlayingClassFromAll","_loadTrack","_getNextTrack","paused","_play","_pause","_loadAllPlaylistsHandler","handleSingleClick","currentTime","handleDblClick","_getPrevTrack","handleInput","target","value","toggleEnable","setMax","setAttribute","seekable","end","setPosition","val","status","disabled","_populateTimeDisplay","toggleActive","toggleMute","muted","remove","volume","contains","v","vol","parseInt","_togglePlayerButtons","_connectPlayerButtons","_attachEvents","_connectAudioEvents","_handleEndOfAudioEvent","_handlePauseEvent","_handlePlayingEvent","_handleProgressEvent","_handleTimeUpdateEvent","_renderPlaylistsList","err","className","querySelector","state","fast","event","handler","canPlayType","_convertSecondsToTime","s","rev","mins","Math","floor","secs","sec_num","hours","minutes","seconds","_createTextNode","str","createTextNode","_empty","firstChild","removeChild","hypoNext","_playlistButtonHandler","plu","dataset","playlist","preventDefault","playlistUrl","_handlePlaylist","pl","_updateScreenTitle","name","tracks","length","_setUpPlaylistDisplay","track","li","createElement","shortText","_makeShortTitle","title","btn","appendChild","_handleLoadTrack","_populateInfoBoxContent","info","_loadPlaylist","href","ex","playlistsUrl","button","url","parent","parentNode","buffd","buffered","i","percentage","ceil","duration","dur","time","totalSecondsRemaining","isNaN","content","innerHTML","ct","src","path","load","pause","play","current","remain","removeAttribute","trackNum","getAttribute","titleStr","split","substr","pop","join"],"sourceRoot":""}