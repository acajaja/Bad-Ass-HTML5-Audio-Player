/*! For license information please see WebAudioPlayer.min.js.LICENSE.txt */
var e={"./src/WebAudioPlayer/components/HttpClient.js":(e,t,n)=>{n.r(t),n.d(t,{get:()=>get});const get=async(e,t=null)=>{let n=e;if(t){n=`${n}?${new URLSearchParams(t).toString}`}const o={headers:new Headers({"Content-Type":"application/json","X-Requested-With":""}),method:"GET",mode:"same-origin"},a=await fetch(n,o);if(!a.ok)throw new Error("Bad");return await a.json()}},"./src/WebAudioPlayer/components/logger.js":(e,t,n)=>{n.r(t),n.d(t,{critical:()=>critical,debug:()=>debug,error:()=>error,info:()=>info,log:()=>log,warn:()=>warn});const _log=(e,t)=>{console.log(t)},debug=e=>{_log(0,e)},log=e=>{_log(0,e)},error=e=>{_log(0,e)},info=e=>{_log(0,e)},warn=e=>{_log(0,e)},critical=e=>{_log(0,e)}}},t={};function __webpack_require__(n){var o=t[n];if(void 0!==o)return o.exports;var a=t[n]={exports:{}};return e[n](a,a.exports,__webpack_require__),a.exports}__webpack_require__.d=(e,t)=>{for(var n in t)__webpack_require__.o(t,n)&&!__webpack_require__.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},__webpack_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var n={};(()=>{__webpack_require__.r(n),__webpack_require__.d(n,{init:()=>init,startup:()=>startup,version:()=>o});var e=__webpack_require__("./src/WebAudioPlayer/components/HttpClient.js"),t=__webpack_require__("./src/WebAudioPlayer/components/logger.js");const o="0.6";let a,l={mp3:["audio/mpeg","audio/MPA","audio/mpa-robust","audio/mpeg3","audio/x-mpeg-3"],mp4:["audio/aac","audio/aacp","audio/3gpp","audio/3gpp2","audio/mp4","audio/MP4A-LATM","audio/mpeg4-generic"],ogg:["application/ogg","audio/oga","audio/ogg","audio/vorbis","audio/vorbis-config"],webm:["audio/webm"],wav:["audio/vnd.wave","audio/wav","audio/wave","audio/x-wav"]},i=null,r=!1,s=null,d=!1,c=null,u=[],p=null,_=[],f=0,y=0,g=".net-stat-box",v=".autoplay-btn",m=".current-time",B=".info-button",h=".info-screen",b=".info-scroll-box",k=".info-content-box",T=".loading-bar",S=".mute-button",x=".next-track-btn",P=".play-btn",C=".playlist-scroll-box",E=".playlist-btn",w=".prev-track-btn",L=".remaining-time",N=".seek-handle-box",A=".screen-title",H=".user-screen",M=".volume-slider-mute-box",j=".volume-button",q=".volume-slider",I={ajaxSpinner:{},autoplayBtn:{},currentTimeDisplay:null,infoButton:{},infoScreen:{},infoScroll:null,infoScrollContent:null,loadProgress:{},muteButton:{},nextTrackBtn:{},playBtn:{},playlistBox:null,playlistBtn:{},prevTrackBtn:{},remainingTime:null,seekHandleBox:{},screenTitle:null,userScreen:{},volumeButton:{},volumeSliderMute:{},volumeSlider:{}};const startup=e=>{window.document.addEventListener("DOMContentLoaded",(t=>{const n=window.document.getElementById(e);init(n,window.document)}))},init=(e,n,o=null)=>{c=e,a=n,d=function _checkWebAudioApiSupport(){const e=typeof Audio;return"function"==e||"object"==e}();try{if(!d)throw new Error("Web Audio is not supported on your device :(");if(c.classList.add("paused"),function _setAudioObject(e=null){i=e??new Audio}(o),!function _checkMimeSupport(){var e="";for(let t in l)for(let n in l[t])if("probably"===(e=_canPlayType(l[t][n]))||"maybe"===e)return t;return!1}())throw new Error("There is no audio codec supported for this device.");return function _setUpFunctionality(){I.ajaxSpinner={node:_getNodeByClass(g),toggle:_ajaxSpinnerToggler},I.autoplayBtn={node:_getNodeByClass(v),handleButton:_autoPlayButtonHandler},I.currentTimeDisplay=_getNodeByClass(m),I.infoButton={node:_getNodeByClass(B),disable:_infoButtonHandler},I.infoScreen={node:_getNodeByClass(h),close:_infoScreenCloseHandler,open:_infoScreenOpenHandler,toggle:_infoScreenToggler},I.infoScroll=_getNodeByClass(b),I.infoScrollContent=_getNodeByClass(k),I.loadProgress={node:_getNodeByClass(T),reset:function(){this.setWidth("0")},setFullWidth:function(e){this.setWidth("100%")},setWidth:function(e){I.loadProgress.node.style.width=e}},I.muteButton={node:_getNodeByClass(S)},I.nextTrackBtn={node:_getNodeByClass(x),handleButton:function(e){_removePlayingClassFromAll(),_loadTrack(_getNextTrack())}},I.playBtn={node:_getNodeByClass(P),handleButton:async function(e){i.paused&&null==s?(s=0,_loadTrack(s)):i.paused?await _play(e):_pause(e)}},I.playlistBox=_getNodeByClass(C),I.playlistBtn={node:_getNodeByClass(E),handleButton:_loadAllPlaylistsHandler},I.prevTrackBtn={node:_getNodeByClass(w),handleSingleClick:function(e){i.currentTime=0},handleDblClick:function(e){_removePlayingClassFromAll(),_loadTrack(function _getPrevTrack(){if(s>0)return s-1;return f-1}())}},I.remainingTime=_getNodeByClass(L),I.seekHandleBox={node:_getNodeByClass(N),handleInput:function(e){i.currentTime=e.target.value},reset:function(){this.node.value=0,this.toggleEnable(!0)},setMax:function(){this.node.setAttribute("max",i.seekable.end(0))},setPosition:function(e){this.node.value=e},toggleEnable:function(e){this.node.disabled=e}},I.screenTitle=_getNodeByClass(A),I.userScreen={node:_getNodeByClass(H),reset:function(){I.seekHandleBox.reset(),I.infoScreen.close(!0),I.loadProgress.reset(),_populateTimeDisplay("00:00","00:00")}},I.volumeButton={node:_getNodeByClass(j),toggleActive:function(){I.volumeButton.node.classList.toggle("active")},toggleMute:function(e){i.muted?(i.muted=!1,I.volumeSlider.setPosition(y),c.classList.remove("muted")):(y=i.volume,i.muted=!0,I.volumeSlider.setPosition(0),c.classList.add("muted"))}},I.volumeSliderMute={node:_getNodeByClass(M),close:function(){I.volumeButton.toggleActive(),I.volumeSliderMute.node.classList.remove("play")},open:function(){I.volumeButton.toggleActive(),I.volumeSliderMute.node.classList.add("play")},toggle:function(e){I.volumeSliderMute.node.classList.contains("play")?I.volumeSliderMute.close():I.volumeSliderMute.open()}},I.volumeSlider={node:_getNodeByClass(q),handleInput:function(e){i.volume=e.target.value},setPosition:function(e){const t=parseInt(e);I.volumeSlider.node.value=t>1?1:t}}}(),u=[I.autoplayBtn.node,I.playBtn.node,I.prevTrackBtn.node,I.muteButton.node,I.nextTrackBtn.node,I.seekHandleBox.node,I.volumeSlider.node],_togglePlayerButtons(!0),I.volumeSlider.setPosition(1),I.seekHandleBox.setPosition(0),I.infoButton.disable(!0),function _connectPlayerButtons(){_attachEvents(I.autoplayBtn.node,"click",I.autoplayBtn.handleButton),_attachEvents(I.infoButton.node,"click",I.infoScreen.toggle),_attachEvents(I.nextTrackBtn.node,"click",I.nextTrackBtn.handleButton),_attachEvents(I.playBtn.node,"click",I.playBtn.handleButton),_attachEvents(I.playlistBtn.node,"click",I.playlistBtn.handleButton),_attachEvents(I.prevTrackBtn.node,"click",I.prevTrackBtn.handleSingleClick),_attachEvents(I.prevTrackBtn.node,"dblclick",I.prevTrackBtn.handleDblClick),_attachEvents(I.seekHandleBox.node,"input",I.seekHandleBox.handleInput),_attachEvents(I.muteButton.node,"click",I.volumeButton.toggleMute),_attachEvents(I.volumeButton.node,"click",I.volumeSliderMute.toggle),_attachEvents(I.volumeSlider.node,"input",I.volumeSlider.handleInput)}(),function _connectAudioEvents(){_attachEvents(i,"canplay",_play),_attachEvents(i,"ended",_handleEndOfAudioEvent),_attachEvents(i,"loadeddata",I.loadProgress.setFullWidth),_attachEvents(i,"pause",_handlePauseEvent),_attachEvents(i,"playing",_handlePlayingEvent),_attachEvents(i,"progress",_handleProgressEvent),_attachEvents(i,"timeupdate",_handleTimeUpdateEvent)}(),_renderPlaylistsList(),i}catch(e){t.error(e),t.error("Failed to initiate the Web Audio Player :(")}};function _getNodeByClass(e){return a.querySelector(`#${c.id} ${e}`)}function _ajaxSpinnerToggler(e){e?I.ajaxSpinner.node.classList.add("play"):I.ajaxSpinner.node.classList.remove("play")}function _autoPlayButtonHandler(e){r?(r=!1,c.classList.remove("autoplay")):(r=!0,c.classList.add("autoplay"))}function _infoButtonHandler(e){e?(I.infoButton.node.classList.remove("has-info"),I.infoButton.node.disabled=!0):(I.infoButton.node.classList.add("has-info"),I.infoButton.node.disabled=!1)}function _infoScreenCloseHandler(e){e&&(I.infoScreen.node.classList.add("fast"),I.infoScreen.node.classList.remove("fast")),I.infoScreen.node.classList.remove("play")}function _infoScreenOpenHandler(){I.infoScreen.node.classList.add("play")}function _infoScreenToggler(e){I.infoScreen.node.classList.contains("play")?I.infoScreen.close():I.infoScreen.open()}function _loadAllPlaylistsHandler(e){_togglePlayerButtons(!0),i.paused||_pause(),I.volumeSliderMute.close(),I.userScreen.reset(),I.infoButton.disable(!0),_renderPlaylistsList()}function _attachEvents(e,t,n){if("function"!=typeof e.addEventListener)throw new Error("Cannot attach events. Client does not support addEventListener method.");e.addEventListener(t,n,!1)}function _canPlayType(e){return i.canPlayType(e)}function _convertSecondsToTime(e,t){if(!0===t){var n=Math.floor(e/60,10),o=e-60*n;return(n>9?n:"0"+n)+":"+(o>9?o:"0"+o)}var a=parseInt(e,10),l=Math.floor(a/3600),i=Math.floor((a-3600*l)/60),r=a-3600*l-60*i;return(i<10?"0"+i:i)+":"+(r<10?"0"+r:r)}function _createTextNode(e){return a.createTextNode(e)}function _empty(e){for(;e.firstChild;)e.removeChild(e.firstChild);return e}function _getNextTrack(){var e=s+1;return e<f?e:0}async function _playlistButtonHandler(t){const n=t.target.dataset.playlist;t.preventDefault();try{const t=new URL(n);!function _handlePlaylist(e){_togglePlayerButtons(!1),p=e,_updateScreenTitle(p.name),f=p.tracks.length,function _setUpPlaylistDisplay(){_empty(I.playlistBox);for(let e=0;e<p.tracks.length;e++){const t=p.tracks[e],n=a.createElement("li"),o=_makeShortTitle(t.title),l=a.createElement("button");l.appendChild(_createTextNode(o)),l.setAttribute("data-tracknum",e),n.appendChild(l),I.playlistBox.appendChild(n),_attachEvents(l,"click",_handleLoadTrack)}}(),_populateTimeDisplay("00:00","00:00");_populateInfoBoxContent(e.info?`<p>${e.info}</p>`:"")}(await async function _loadPlaylist(t){if("string"!=typeof t||t.length<=0)throw new Error("No playlist has been defined!");return I.ajaxSpinner.toggle(!0),_togglePlayerButtons(!0),I.playlistBtn.node.classList.remove("active"),await e.get(t)}(t.href))}catch(e){console.error("Failed to load playlist")}}async function _renderPlaylistsList(){const t=new URL(c.dataset.playlistsUrl);0===_.length&&(_=await e.get(t.href)),I.playlistBtn.node.classList.add("active"),_updateScreenTitle("Playlists"),_empty(I.playlistBox);for(const e of _){const t=a.createElement("button"),n=a.createElement("li");t.appendChild(_createTextNode(e.name)),t.dataset.playlist=e.url,t.setAttribute("title",e.name),_attachEvents(t,"click",_playlistButtonHandler),n.appendChild(t),I.playlistBox.appendChild(n)}}function _handleEndOfAudioEvent(e){r&&(_removePlayingClassFromAll(),_loadTrack(_getNextTrack()))}function _handlePauseEvent(e){c.classList.remove("playing"),c.classList.add("paused")}function _handlePlayingEvent(e){var t=I.playlistBox.querySelector(`button[data-tracknum="${s}"]`).parentNode;c.classList.remove("paused"),c.classList.add("playing"),t.setAttribute("class","current")}function _handleProgressEvent(e){const t=e.target.buffered;for(let e=0;e<t.length;e++){const n=Math.ceil(parseInt(t.end(e)/t.duration*100));I.loadProgress.setWidth(n+"%")}}function _handleTimeUpdateEvent(e){const t=e.target.duration,n=e.target.currentTime,o=parseInt(t-n,10);isNaN(o)||(_populateTimeDisplay(_convertSecondsToTime(n),_convertSecondsToTime(o,!0)),I.seekHandleBox.setPosition(n))}function _populateInfoBoxContent(e){_empty(I.infoScrollContent),I.infoScrollContent.innerHTML=e,I.infoButton.disable(!1)}function _loadTrack(e){if(_pause(),I.seekHandleBox.toggleEnable(!0),I.loadProgress.reset(),s=parseInt(e),i.src=p.tracks[s].path,p.tracks[s].info.length<=0)I.infoButton.disable(!0);else{_populateInfoBoxContent(`<p>${p.tracks[s].title}</p>\n\t\t\t${p.tracks[s].info}`)}i.load()}function _pause(e){i.pause()}async function _play(e){I.seekHandleBox.toggleEnable(!1),I.seekHandleBox.setMax();try{await i.play()}catch(e){I.seekHandleBox.toggleEnable(!0)}}function _populateTimeDisplay(e,t){_empty(I.remainingTime).appendChild(_createTextNode(t)),_empty(I.currentTimeDisplay).appendChild(_createTextNode(e))}function _removePlayingClassFromAll(){c.classList.remove("playing");const e=I.playlistBox.querySelector("current");e&&e.removeAttribute("class")}function _handleLoadTrack(e){const t=parseInt(e.target.getAttribute("data-tracknum"));e.preventDefault(),_removePlayingClassFromAll(),_loadTrack(t)}function _makeShortTitle(e){if(e.length<=50)return e;const t=e.substr(0,50).split(" ");t.pop();return`${t.join(" ")}...`}function _togglePlayerButtons(e){for(const t of u)t.disabled=e}function _updateScreenTitle(e){I.screenTitle.innerHTML=e}})();var o=n.init,a=n.startup,l=n.version;export{o as init,a as startup,l as version};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,